!function(t){var e={};function n(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(i,r,function(e){return t[e]}.bind(null,r));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=2)}([function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.canvas=void 0;var i=function(){this.canvas=document.createElement("canvas"),this.c=this.canvas.getContext("2d"),this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight,this.canvas.style.position="fixed",this.canvas.style.top="0",this.canvas.style.left="0",document.body.appendChild(this.canvas)};e.canvas=new i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(){}return t.randomIntFromRange=function(t,e){return Math.floor(Math.random()*(e-t+1)+t)},t.pick_random_thing=function(t){return t[Math.floor(Math.random()*t.length)]},t}();e.default=i},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(3),r=n(0),a=n(1),o=r.canvas.c,s=r.canvas.canvas,c=s.width,u=s.height,d=["#2185C5","#7ECEFD","#FF7F66","#6C3483","#D35400","#FA8072"],h={x:0,y:0};addEventListener("mousemove",(function(t){h.x=t.clientX,h.y=t.clientY})),addEventListener("resize",(function(){r.canvas.canvas.width=window.innerWidth,r.canvas.canvas.height=window.innerHeight,f()}));var l=[];function f(){l=[];for(var t=0;t<2500;t++){var e=a.default.randomIntFromRange(1,5),n=c/2,r=u/2,o=a.default.pick_random_thing(d);l.push(new i.default(n,r,e,o))}}var v=function(){o.clearRect(0,0,innerWidth,innerHeight),o.fillStyle="rgba(225, 225, 225, 0.1)",o.fillRect(0,0,c,u);for(var t=0,e=l;t<e.length;t++){e[t].update()}requestAnimationFrame(v)};f(),v()},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=n(0),r=n(1),a=i.canvas.c,o=i.canvas.canvas,s=o.width,c=o.height,u=function(){function t(t,e,n,i){this.x=t,this.y=e,this.radius=n,this.color=i,this.speed_num=[10,20,30,-10,-20,-30],this.velocity=.05,this.radians=Math.random()*Math.PI*2,this.distance_from_center=r.default.randomIntFromRange(150,200),this.center_pos={x:t,y:e},this.directions={x:r.default.pick_random_thing(this.speed_num),y:r.default.pick_random_thing(this.speed_num)}}return t.prototype.draw=function(t){a.beginPath(),a.lineWidth=this.radius,a.strokeStyle=this.color,a.moveTo(t.x,t.y),a.lineTo(this.x,this.y),a.stroke(),a.closePath()},t.prototype.update=function(){var t={x:this.x,y:this.y},e=this.center_pos,n=e.x,i=e.y,r=this.distance_from_center,a=this.radians,o=this.directions,u=this.velocity;(n+r>s||n-r<0)&&(this.directions.x*=-1),(i+r>c||i-r<0)&&(this.directions.y*=-1),this.x+=o.x,this.y+=o.y,this.center_pos.x+=.05*o.x,this.center_pos.y+=.05*o.y,this.radians+=u,this.x=n+Math.cos(a)*r,this.y=i+Math.sin(a)*r,this.draw(t)},t}();e.default=u}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,